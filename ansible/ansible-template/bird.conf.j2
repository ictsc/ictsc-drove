####
# Basic configuration
####

router id {{ groups['bgp_router'][0] }};

log syslog { info, remote, warning, error, auth, fatal, bug };
log stderr all;
debug protocols {events, states, interfaces};
graceful restart wait 15;

####
# Definition
####

define ROUTER_ASN = 65020;
define WORKER_ASN = 65021;


####
# Routing Table Objects
####

ipv4 table kernel_table_v4; # kernel table (default)
ipv4 table egp_table_v4; # BGP table


####
# Kernel Connection
####

# Device definition
protocol device device1 {
    interface "-ethmgmt", "*";

    scan time 100;
}

# Import routing table: Direct connected
protocol direct direct1 {
    ipv4 {
        table kernel_table_v4;
    };

    interface "-ethmgmt", "*";
}

# Connect routing table; Kernel (IPv4)
protocol kernel kernel_v4 {
    ipv4 {
        table kernel_table_v4;
        preference 10;

        import filter {
            reject;
        };

        export filter {
            accept;
        };
    };

    learn off;
    scan time 10;
    graceful restart on;
    kernel table 254;
}


####
# Define routing table: Static
####

# Define routing table: Static (IPv4)
protocol static static_all_v4 {
    ipv4 {
        table kernel_table_v4;
        preference 200;

        import filter {
            # kernel_table_v4 <- Static Route
            accept;
        };

        export filter {
            # Read Only
            reject;
        };
    };
}


####
# Generate BGP Route
####

# Define routing table: BGP
# Generate Route(IPv4) (BGP Advertise Only)
protocol static static_bgp_v4 {
    ipv4 {
        table egp_table_v4;
        preference 400;

        import filter {
            accept;
        };

        export filter {
            # Read Only
            reject;
        };
    };

    route {{ hostvars[groups['bgp_router'][0]]['bgp_address'] }} blackhole;
}


####
# eBGP Configuration
####

# eBGP Peer
{% for item in groups['worker_node'] %}
protocol bgp node_peer_{{ item | replace('.', '_') }} {
    local {{ groups['bgp_router'][0] }} as ROUTER_ASN;
    neighbor {{ item }} as WORKER_ASN;

    hold time 30;
    startup hold time 30;
    keepalive time 10;
    connect retry time 5;
    connect delay time 5;
    error wait time 30, 30;
    error forget time 30;
    default bgp_local_pref 100;

    ipv4 {
        table egp_table_v4;
        preference 100;

        import filter {
            accept;
        };

        export filter {
            accept;
        };
    };
}
{% endfor %}

####
# Table Connection
####

# Kernel (kernel_table_v4) <-> BGP (egp_table_v4)
protocol pipe pipe_bgp_to_kernel_table_v4 {
    table egp_table_v4;
    peer table kernel_table_v4;

    # Kernel -> BGP
    import filter {
        reject;
    };

    # BGP -> Kernel
    export filter {
        accept;
    };
}
