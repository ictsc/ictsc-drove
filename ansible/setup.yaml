# wait for ssh connection
- hosts: all
  name: Wait for SSH connection
  gather_facts: false
  roles:
    - wait_ssh

# common setup phase
- hosts: all
  name: Common Setup
  become: true
  roles:
    - common

- hosts: router
  name: BIRD Setup
  become: true
  roles:
    - bird

# containerd setup phase
- hosts: cloud_servers
  name: Containerd Setup
  become: true
  roles:
    - containerd

# interface setup phase
- hosts: control_plane
  name: Netplan setup (control_plane)
  any_errors_fatal: true
  roles:
    - role: mrlesmithjr.netplan
      become: true
      netplan_remove_existing: false
      netplan_enabled: true
      netplan_config_file: /etc/netplan/60-ansible-config.yaml
      netplan_renderer: networkd
      netplan_configuration:
        network:
          version: 2
          ethernets:
            eth1:
              addresses:
                - 192.168.100.1{{groups["control_plane"].index(inventory_hostname)}}/24

- hosts: worker_node
  name: Netplan setup (worker_node)
  any_errors_fatal: true
  roles:
    - role: mrlesmithjr.netplan
      become: true
      netplan_remove_existing: false
      netplan_enabled: true
      netplan_config_file: /etc/netplan/60-ansible-config.yaml
      netplan_renderer: networkd
      netplan_configuration:
        network:
          version: 2
          ethernets:
            eth1:
              addresses:
                - 192.168.100.2{{groups["worker_node"].index(inventory_hostname)}}/24

- hosts: lb
  name: Netplan setup (lb)
  any_errors_fatal: true
  roles:
    - role: mrlesmithjr.netplan
      become: true
      netplan_remove_existing: false
      netplan_enabled: true
      netplan_config_file: /etc/netplan/60-ansible-config.yaml
      netplan_renderer: networkd
      netplan_configuration:
        network:
          version: 2
          ethernets:
            eth1:
              addresses:
                - 192.168.100.3{{groups["lb"].index(inventory_hostname)}}/24

# kubernetes setup phase
- hosts: control_plane:worker_node
  name: Kubernetes setup
  become: true
  roles:
    - k8s_install

# kubernetes api lb setup phase
- hosts: lb
  name: Kubernetes api lb setup
  become: true
  roles:
    - lb

# kubeadm setup phase
- hosts: delegate_plane
  name: Kubeadm setup
  any_errors_fatal: true
  become: true
  roles:
    - k8s_init
    - cilium

# join other control_plane
- hosts: control_plane
  name: Join other control_plane
  become: true
  tasks:
    - name: Join cluster
      ansible.builtin.command:
        "{{ hostvars[groups['control_plane'][0]]['join_command'] }} --control_plane \
        --certificate-key {{ hostvars[groups['control_plane'][0]]['certs'] }}"
      changed_when: false
      failed_when: false
      when: groups['control_plane'].index(inventory_hostname) != 0

# join worker_node
- hosts: worker_node
  name: Join cluster
  become: true
  tasks:
    - name: Join cluster
      ansible.builtin.command: "{{ hostvars[groups['control_plane'][0]]['join_command'] }}"
      changed_when: true
      failed_when: false

# install argocd
- hosts: delegate_plane
  name: Install argo CD
  tasks:
    - name: Install argocd
      ansible.builtin.shell: |
        kubectl create namespace argocd
        kubectl apply -n argocd \
        -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
      changed_when: false
