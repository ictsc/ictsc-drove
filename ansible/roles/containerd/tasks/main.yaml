- name: Setup kernel module settings
  ansible.builtin.copy:
    content: |
      overlay
      br_netfilter
    dest: /etc/modules-load.d/containerd.conf
    mode: "0644"
  with_items:
    - "{{ users }}"

- name: Load kernel modules
  community.general.modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - overlay
    - br_netfilter

- name: Set kernel params
  ansible.posix.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    sysctl_set: true
    state: present
    reload: true
    ignoreerrors: true
  with_dict: "{{ containerd_sysctl_config }}"

- name: Install "apt-transport-https ca-certificates curl software-properties-common" packages
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common

- name: Get docker's official GPG key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /tmp/docker.gpg
    mode: "0644"
    force: true

- name: Add docker's official GPG key
  ansible.builtin.shell: gpg --dearmor --batch --yes -o /etc/apt/keyrings/docker.gpg < /tmp/docker.gpg
  changed_when: false

- name: Add docker repository
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu jammy stable
    state: present

- name: Update apt repository
  ansible.builtin.apt:
    update_cache: true

- name: Install containerd
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - containerd.io

- name: Create settings directory
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: "0755"

- name: Configure containerd
  ansible.builtin.shell: containerd config default > /etc/containerd/config.toml
  changed_when: true

- name: Enable systemd_cgroup conf
  ansible.builtin.replace:
    dest: "/etc/containerd/config.toml"
    regexp: "SystemdCgroup = false"
    replace: "SystemdCgroup = true"

- name: Replace sandbox image
  ansible.builtin.replace:
    dest: "/etc/containerd/config.toml"
    regexp: 'sandbox_image = "registry.k8s.io/pause:3.6"'
    replace: 'sandbox_image = "registry.k8s.io/pause:3.9"'

- name: Set containerd service to start on boot
  ansible.builtin.systemd:
    name: containerd
    daemon_reload: true
    state: restarted
    enabled: true
