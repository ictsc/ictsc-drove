loki:
  auth_enabled: false
  storage:
    bucketNames:
      chunks: ${BUCKET_NAME}
      ruler: ${BUCKET_NAME}
      admin: ${BUCKET_NAME}
    type: s3
    s3:
      endpoint: http://${BUCKET_HOST}:${BUCKET_PORT}
      accessKeyId: ${AWS_ACCESS_KEY_ID}
      secretAccessKey: ${AWS_SECRET_ACCESS_KEY}
      insecure: true
  schemaConfig:
    configs:
      - from: 2024-04-01
        object_store: s3
        store: tsdb
        schema: v13
        index:
          prefix: index_
          period: 24h
  compactor:
    working_directory: /tmp/loki/retention
    retention_enabled: true
    retention_delete_delay: 2h
    delete_request_store: s3
  limits_config:
    retention_period: 30d

gateway:
  replicas: 2

write:
  replicas: 2
  persistence:
    storageClass: ceph-filesystem
    enableStatefulSetAutoDeletePVC: true
    size: 1Gi
  extraArgs:
    - "-config.expand-env=true"
  extraEnvFrom:
    - configMapRef:
        name: loki-bucket
    - secretRef:
        name: loki-bucket

read:
  replicas: 2
  persistence:
    storageClass: ceph-filesystem
    enableStatefulSetAutoDeletePVC: true
    size: 1Gi
  extraArgs:
    - "-config.expand-env=true"
  extraEnvFrom:
    - configMapRef:
        name: loki-bucket
    - secretRef:
        name: loki-bucket

backend:
  replicas: 2
  persistence:
    storageClass: ceph-filesystem
    enableStatefulSetAutoDeletePVC: true
    size: 1Gi
  extraArgs:
    - "-config.expand-env=true"
  extraEnvFrom:
    - configMapRef:
        name: loki-bucket
    - secretRef:
        name: loki-bucket

resultsCache:
  resources:
    requests:
      memory: "0"
      cpu: "0"
    limits:
      memory: "0"
      cpu: "0"

chunksCache:
  resources:
    requests:
      memory: "0"
      cpu: "0"
    limits:
      memory: "0"
      cpu: "0"
