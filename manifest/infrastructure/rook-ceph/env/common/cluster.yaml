monitoring:
  enabled: true
  createPrometheusRules: true

cephClusterSpec:
  dashboard:
    ssl: false
  resources:
    mgr:
      limits:
        memory: "1Gi"
      requests:
        cpu: 0
        memory: 0
    mon:
      limits:
        memory: "2Gi"
      requests:
        cpu: 0
        memory: 0
    osd:
      limits:
        memory: "4Gi"
      requests:
        cpu: 0
        memory: 0
    mgr-sidecar:
      limits:
        memory: "100Mi"
      requests:
        cpu: 0
        memory: 0
    crashcollector:
      limits:
        memory: "60Mi"
      requests:
        cpu: 0
        memory: 0
    logcollector:
      limits:
        memory: "1Gi"
      requests:
        cpu: 0
        memory: 0
    cleanup:
      limits:
        memory: "1Gi"
      requests:
        cpu: 0
        memory: 0
    exporter:
      limits:
        memory: "128Mi"
      requests:
        cpu: 0
        memory: 0

cephFileSystems:
  - name: ceph-filesystem
    spec:
      metadataPool:
        replicated:
          size: 3
      dataPools:
        - failureDomain: host
          replicated:
            size: 3
          name: data0
      metadataServer:
        activeCount: 1
        activeStandby: true
        resources:
          limits:
            memory: "4Gi"
          requests:
            cpu: 0
            memory: 0
        priorityClassName: system-cluster-critical
    storageClass:
      enabled: true
      isDefault: false
      name: ceph-filesystem
      pool: data0
      reclaimPolicy: Delete
      allowVolumeExpansion: true
      volumeBindingMode: "Immediate"
      annotations: {}
      labels: {}
      mountOptions: []
      parameters:
        csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
        csi.storage.k8s.io/provisioner-secret-namespace: "{{ .Release.Namespace }}"
        csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
        csi.storage.k8s.io/controller-expand-secret-namespace: "{{ .Release.Namespace }}"
        csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
        csi.storage.k8s.io/node-stage-secret-namespace: "{{ .Release.Namespace }}"
        csi.storage.k8s.io/fstype: ext4

cephObjectStores:
  - name: ceph-objectstore
    spec:
      metadataPool:
        failureDomain: host
        replicated:
          size: 3
      dataPool:
        failureDomain: host
        erasureCoded:
          dataChunks: 2
          codingChunks: 1
      preservePoolsOnDelete: true
      gateway:
        port: 80
        resources:
          limits:
            memory: "2Gi"
          requests:
            cpu: 0
            memory: 0
        instances: 1
        priorityClassName: system-cluster-critical
    storageClass:
      enabled: true
      name: ceph-bucket
      reclaimPolicy: Delete
      volumeBindingMode: "Immediate"
      annotations: {}
      labels: {}
      parameters:
        region: us-east-1
    ingress:
      enabled: false
